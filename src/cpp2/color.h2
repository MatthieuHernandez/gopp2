Color: type = {
    public value: i8;

    public operator=:(out this, v: i8) = {
        value = v;
    }

    public operator=:(out this, that) = {
        value = that.value;
    }

    public operator<=>:(this, that) -> std::strong_ordering;
}

ColorNone: Color = (0);
ColorBlack: Color = (1);
ColorWhite: Color = (2);

otherColor:(in c: Color) -> Color = {
    if c == ColorBlack {
        return ColorWhite;
    }
    else if c == ColorWhite {
        return ColorBlack;
    }
    return ColorNone;
}

 colorName:(in c: Color) -> std::string = {
    if c == ColorBlack {
        return "Black";
    }
    else if c == ColorWhite {
        return "White";
    }
    return "None";
}
