enum Color: uint8_t {
    None = 0,
    Black = 1,
    White = 2,
};

void switchPlayer(Color& c) {
    if (c == Color::Black) {
        c = Color::White;
    }
    else if (c == Color::White) {
        c =  Color::Black;
    }
}

std::string colorName(const Color& c) {
    if (c == Color::Black) {
        return "Black";
    }
    else if (c == Color::White) {
        return "White";
    }
}

Move: type = {
    public color: Color;
    public position: std::array<i8, 2>;
    public name: std::string;
    public pass: bool;

    getFlattenPosition:(this) -> i16 = {
        i: i16 = 0;
        i = (position[1] - 1) * 19 + position[0] - 1;
        return i;
    }

    operator=:(out this, col: Color, pos: std::array<i8, 2>, nam: std::string, pas: bool = false) = {
        color = col;
        position = pos;
        name = nam;
        pass = pas;
    }

    operator=:(out this, that) = {
        color = that.color;
        position = that.position;
        name = that.name;
        pass = that.pass;
    }
}

